{"ast":null,"code":"/* eslint-disable jsx-a11y/control-has-associated-label */import React,{useEffect,useRef}from'react';import classNames from'classnames';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Header=/*#__PURE__*/React.memo(function(_ref){var title=_ref.title,hasTodos=_ref.hasTodos,hasActiveTodos=_ref.hasActiveTodos,isAdding=_ref.isAdding,onSubmit=_ref.onSubmit,setTitle=_ref.setTitle,toggleAll=_ref.toggleAll;var newTodoField=useRef(null);useEffect(function(){if(newTodoField.current&&hasTodos){newTodoField.current.focus();}},[isAdding]);return/*#__PURE__*/_jsxs(\"header\",{className:\"todoapp__header\",children:[hasTodos&&/*#__PURE__*/_jsx(\"button\",{\"data-cy\":\"ToggleAllButton\",type:\"button\",className:classNames('todoapp__toggle-all',{active:!hasActiveTodos}),onClick:toggleAll}),/*#__PURE__*/_jsx(\"form\",{onSubmit:onSubmit,children:/*#__PURE__*/_jsx(\"input\",{\"data-cy\":\"NewTodoField\",type:\"text\",ref:newTodoField,className:\"todoapp__new-todo\",placeholder:\"What needs to be done?\",value:title,onChange:function onChange(event){return setTitle(event.target.value);},disabled:isAdding})})]});});","map":{"version":3,"names":["React","useEffect","useRef","classNames","Header","memo","title","hasTodos","hasActiveTodos","isAdding","onSubmit","setTitle","toggleAll","newTodoField","current","focus","active","event","target","value"],"sources":["C:/projects/react_todo-app-with-api/src/components/Header/Header.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { FormEvent, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  title: string,\n  hasTodos: boolean,\n  hasActiveTodos: boolean,\n  isAdding: boolean,\n  onSubmit: (e: FormEvent) => void,\n  setTitle: (value: string) => void,\n  toggleAll: () => void,\n};\n\nexport const Header: React.FC<Props> = React.memo(({\n  title,\n  hasTodos,\n  hasActiveTodos,\n  isAdding,\n  onSubmit,\n  setTitle,\n  toggleAll,\n}) => {\n  const newTodoField = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (newTodoField.current && hasTodos) {\n      newTodoField.current.focus();\n    }\n  }, [isAdding]);\n\n  return (\n    <header className=\"todoapp__header\">\n      {hasTodos && (\n        <button\n          data-cy=\"ToggleAllButton\"\n          type=\"button\"\n          className={classNames(\n            'todoapp__toggle-all', { active: !hasActiveTodos },\n          )}\n          onClick={toggleAll}\n        />\n      )}\n\n      <form onSubmit={onSubmit}>\n        <input\n          data-cy=\"NewTodoField\"\n          type=\"text\"\n          ref={newTodoField}\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n          disabled={isAdding}\n        />\n      </form>\n    </header>\n  );\n});\n"],"mappings":"AAAA,0DACA,MAAOA,MAAK,EAAeC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC3D,MAAOC,WAAU,KAAM,YAAY,CAAC,wFAYpC,MAAO,IAAMC,OAAuB,cAAGJ,KAAK,CAACK,IAAI,CAAC,cAQ5C,IAPJC,MAAK,MAALA,KAAK,CACLC,QAAQ,MAARA,QAAQ,CACRC,cAAc,MAAdA,cAAc,CACdC,QAAQ,MAARA,QAAQ,CACRC,QAAQ,MAARA,QAAQ,CACRC,QAAQ,MAARA,QAAQ,CACRC,SAAS,MAATA,SAAS,CAET,GAAMC,aAAY,CAAGX,MAAM,CAAmB,IAAI,CAAC,CAEnDD,SAAS,CAAC,UAAM,CACd,GAAIY,YAAY,CAACC,OAAO,EAAIP,QAAQ,CAAE,CACpCM,YAAY,CAACC,OAAO,CAACC,KAAK,EAAE,CAC9B,CACF,CAAC,CAAE,CAACN,QAAQ,CAAC,CAAC,CAEd,mBACE,gBAAQ,SAAS,CAAC,iBAAiB,WAChCF,QAAQ,eACP,eACE,UAAQ,iBAAiB,CACzB,IAAI,CAAC,QAAQ,CACb,SAAS,CAAEJ,UAAU,CACnB,qBAAqB,CAAE,CAAEa,MAAM,CAAE,CAACR,cAAe,CAAC,CAClD,CACF,OAAO,CAAEI,SAAU,EAEtB,cAED,aAAM,QAAQ,CAAEF,QAAS,uBACvB,cACE,UAAQ,cAAc,CACtB,IAAI,CAAC,MAAM,CACX,GAAG,CAAEG,YAAa,CAClB,SAAS,CAAC,mBAAmB,CAC7B,WAAW,CAAC,wBAAwB,CACpC,KAAK,CAAEP,KAAM,CACb,QAAQ,CAAE,kBAACW,KAAK,QAAKN,SAAQ,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,EAAC,CAClD,QAAQ,CAAEV,QAAS,EACnB,EACG,GACA,CAEb,CAAC,CAAC"},"metadata":{},"sourceType":"module"}